name: Functional Tests

on: [pull_request]


jobs:
  test:
    env:
      CI: true
      APPIUM_TEST_SERVER_PORT: 4567
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      APPIUM_STARTUP_TIMEOUT_SEC: 30
      DISPLAY: :10
      _FORCE_LOGS: 1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
        check-latest: true
    - run: |
        sudo cp scripts/xvfb.sh /etc/init.d/xvfb
        sudo chmod +x /etc/init.d/xvfb
        sudo update-rc.d xvfb defaults
        sudo service xvfb start
      name: Start X virtual frame buffer
    - run: sudo apt-get install firefox
      name: Install Firefox
    - run: |
        latest_release="$(curl https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r .name)"
        curl -L "https://github.com/mozilla/geckodriver/releases/download/v${latest_release}/geckodriver-v${latest_release}-linux64.tar.gz" \
          --output /tmp/geckodriver.tar.gz
        tar -xzf /tmp/geckodriver.tar.gz
        sudo mv geckodriver /usr/bin/
      name: Deploy Gecko driver
    - run: |
        npm install -g appium@next
        npm install
      name: Install dev dependencies
    - run: |
        cwd=$(pwd)
        pushd "$cwd"
        cd ~
        appium driver install --source=local "$cwd"
        nohup appium server \
          --port=$APPIUM_TEST_SERVER_PORT \
          --address=$APPIUM_TEST_SERVER_HOST \
          --relaxed-security \
          2>&1 > "$cwd/appium.log" &
        popd
      name: Start Appium server
    - run: |
        seconds_started=$(date +%s)
        while ! nc -z $APPIUM_TEST_SERVER_HOST $APPIUM_TEST_SERVER_PORT; do
          sleep 0.1
          seconds_elapsed=$(( $(date +%s) - seconds_started ))
          if [[ $seconds_elapsed -gt $APPIUM_STARTUP_TIMEOUT_SEC ]]; then
            echo "Appium server was unable to start within $APPIUM_STARTUP_TIMEOUT_SEC seconds timeout"
            exit 1
          fi
        done
      name: Wait for Appium server startup
    - run: npm run e2e-test
      name: Run functional tests
    - name: Save server output
      if: ${{ always() }}
      uses: actions/upload-artifact@master
      with:
        name: appium.log
        path: appium.log
